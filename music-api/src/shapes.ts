export enum ShapeDifficulty {
  EASY = 1,
  MEDIUM = 5,
  HARD = 10,
}

export const BAR_CHORD = 1;
export const CLASSIC = 2;

export interface Shape {
  locations: number[];
  difficulty: ShapeDifficulty;
  extra: number;
}

export const createShape = (
  shape: number[],
  difficulty: ShapeDifficulty = ShapeDifficulty.HARD,
  extra: number = 0
): Shape => {
  const lmin = Math.min(...shape.filter((n) => n !== -1));
  return {
    difficulty,
    extra,
    locations: shape.map((n) => (n === -1 ? -1 : n - lmin)),
  };
};

export const compareShape = (
  a: Shape,
  b: Shape
): {
  difficulty: number;
  match: boolean;
} => {
  let diff = 0;
  b.locations.forEach((_, string) => {
    const d2 = Math.abs(a.locations[string] - b.locations[string]);
    diff += d2 * d2;
  });
  return {
    difficulty: (a.difficulty as number) + diff,
    match: diff === 0,
  };
};

export const SHAPES = [
  createShape([0, 0, 0, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 0, 2, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([0, 4, -1, 2, 5, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 2, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 2, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 3, -1, -1, 1], ShapeDifficulty.EASY),
  createShape([-1, 0, 3, 2, 2, 1], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, -1, 2, 2, 1], ShapeDifficulty.HARD),
  createShape([-1, 0, 2, 1, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 2, 4, 2, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 7, 6, 0, 0], ShapeDifficulty.EASY),
  createShape([-1, 0, 0, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 6, 5, 5], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 9, 10, 9], ShapeDifficulty.EASY),
  createShape([3, -1, 2, 2, 2, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 2, 0, 2, 0], ShapeDifficulty.EASY),
  createShape([-1, 0, 2, 2, 2, 3], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 0, 2, 2, 2, 2], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([0, -1, 4, 2, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([2, -1, 2, 2, 2, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 4, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 2, 2, -1, -1, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 2, -1, 0], ShapeDifficulty.MEDIUM),
  createShape([5, 7, 7, -1, -1, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 2, 0, 2, 2], ShapeDifficulty.HARD),
  createShape([5, 5, 4, 0, 3, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 2, 0, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([1, 0, 3, 0, 2, 1], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 0, 2, 0], ShapeDifficulty.EASY),
  createShape([-1, 0, 2, 0, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 2, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([5, -1, 0, 0, 3, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 0, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 2, 2, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 2, 1, 1, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, -1, 0, 1, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 0, 0, 1], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 2, 0, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([0, 2, 2, 1, 3, 0], ShapeDifficulty.MEDIUM, BAR_CHORD | CLASSIC),
  createShape([-1, 2, 0, 1, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 4, 4, 4], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 2, 0, 1, 0, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 1, 0, 1], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, -1, 2, 0, 0, 0], ShapeDifficulty.EASY),
  createShape([0, 2, 1, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([0, -1, 6, 4, 4, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 1, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 2, 2, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 3, -1, 2, 4, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 2, 1, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 1, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 7, 5, 5, 5], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 2, 2, 1, 0], ShapeDifficulty.EASY),
  createShape([8, 12, -1, -1, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 0, 7, 5, 0, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 2, 2, 0, 0], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 5, 5, 5], ShapeDifficulty.EASY),
  createShape([0, 0, 3, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([1, 3, 3, 2, 1, 0], ShapeDifficulty.HARD),
  createShape([1, -1, 2, 2, 1, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 3, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 0, 2, 0, 1, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 2, 2, 1, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 5, 5, 5, 8], ShapeDifficulty.HARD),
  createShape([-1, 0, 2, 2, 1, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 1, 1, 0, 1], ShapeDifficulty.HARD),
  createShape([-1, 5, 7, 5, 8, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 6, 5, 5, 7], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 2, 2, 3, 0], ShapeDifficulty.MEDIUM, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 2, 2, 3, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([5, 5, 7, 7, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 2, 3, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([0, 0, 2, 2, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 0, 2, 4, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([0, 2, 2, 2, 0, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 2, 2, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 2, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 2, 0, 2, 0, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 0, 2, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 1, 2, 0, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 3, 2, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([3, -1, 2, 2, 0, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 2, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 5, 4, 5, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 4, 4, 0, 0], ShapeDifficulty.EASY),
  createShape([4, -1, 0, 2, 3, 0], ShapeDifficulty.HARD),
  createShape([0, 1, -1, 2, 3, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 7, 7, 6, 0], ShapeDifficulty.EASY),
  createShape([0, 0, 0, 2, 3, 2], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([0, 0, 4, 2, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([2, -1, 0, 2, 3, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 2, 2, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 0, 1, 0], ShapeDifficulty.EASY),
  createShape([-1, 5, 4, 2, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 9, 7, 7, -1, 0], ShapeDifficulty.HARD),
  createShape([3, 2, 1, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 1, 0, 0, 3], ShapeDifficulty.HARD),
  createShape([2, -1, 1, 2, 0, 2], ShapeDifficulty.HARD),
  createShape([-1, 0, 1, 2, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 1, 2, 0, 2], ShapeDifficulty.HARD),
  createShape([-1, -1, 4, 4, 4, 0], ShapeDifficulty.EASY),
  createShape([0, 0, 4, 4, 4, 0], ShapeDifficulty.EASY, CLASSIC),
  createShape([0, 2, 1, 2, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 1, 0, 0, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 1, 0, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, -1, 0, 3, 3, 1], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, -1, 0, 3, 3, 2], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, -1, 0, 3, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 0, 2, 1, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 6, 6, 6], ShapeDifficulty.EASY),
  createShape([-1, 1, 3, 3, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 2, 0, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 2, 2, -1, 5], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([2, -1, 4, 3, 3, 0], ShapeDifficulty.HARD),
  createShape([-1, 3, -1, 3, 2, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 3, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 1, 2, 0, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 4, 3, 2, 0], ShapeDifficulty.EASY),
  createShape([0, 0, 2, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 0, 0, 0, 2], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 1, 2, 1, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 0, 2, 0, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 2, 0, 1], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([1, -1, 0, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 2, 0, 0, 0, 1], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 4, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 4, 4, 3, 2], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, 2, 0, 2, 0, 2], ShapeDifficulty.HARD),
  createShape([-1, 2, 0, 2, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 2, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([2, 2, 0, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([2, 2, 0, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 2, 0, 0, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 2, 4, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([0, 2, 0, 2, 0, 2], ShapeDifficulty.HARD),
  createShape([-1, 0, 1, 1, 2, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([7, 9, 9, -1, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 2, 4, 4, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 2, 2, 2, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 4, 4, 4, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 2, 1, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([0, -1, 4, 1, 0, 0], ShapeDifficulty.HARD),
  createShape([2, 2, 2, 1, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([0, 2, 2, 0, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([0, 2, 4, 0, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([0, -1, 4, 0, 0, 0], ShapeDifficulty.HARD),
  createShape([2, 2, 2, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 3, 2, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 3, 5, 5, 5, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 3, 2, 0, 1, 0], ShapeDifficulty.EASY),
  createShape([3, -1, 2, 0, 1, 0], ShapeDifficulty.HARD),
  createShape([-1, 3, 2, 0, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 3, 5, 5, 5, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 4, 5, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 3, 2, 0, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, 2, 2, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 0, 1, 0], ShapeDifficulty.HARD),
  createShape([-1, 3, 0, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 2, 0, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 2, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 5, 5, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 10, 12, 12, 13, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 5, 5, 5, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 3, 3, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 3, 0, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 3, -1, 3, 3, 2], ShapeDifficulty.HARD),
  createShape([-1, 3, 2, 3, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 2, 2, 1, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 3, 0, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 3, 3, 0, 1, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 3, 0, 1, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, 7, 9, 9, 10, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 0, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 4, 2, 5, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 2, 1, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 3, 0, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 0, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 3, 0, 0, 1, 1], ShapeDifficulty.MEDIUM),
  createShape([2, -1, 2, 1, 0, 0], ShapeDifficulty.HARD, BAR_CHORD),
  createShape([-1, -1, 2, 1, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 3, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 7, 5, 5, -1, 0], ShapeDifficulty.HARD),
  createShape([2, 0, 0, 2, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 0, 2, 3, 2], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, 0, 4, 2, 3, 2], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 2, 3, 2], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([-1, -1, 0, 7, 7, 5], ShapeDifficulty.MEDIUM),
  createShape([-1, 3, 5, 3, 5, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 0, 2, 1, 2], ShapeDifficulty.MEDIUM),
  createShape([-1, 1, -1, 0, 1, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 14, 14, 14], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 2, 2, 2], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([5, -1, 4, 0, 3, 5], ShapeDifficulty.HARD),
  createShape([3, -1, 0, 2, 3, 2], ShapeDifficulty.HARD),
  createShape([0, 0, 2, 2, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 2, 3, 5], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 0, 2, 1, 2], ShapeDifficulty.MEDIUM),
  createShape([2, -1, 0, 2, 1, 0], ShapeDifficulty.HARD),
  createShape([-1, 5, 7, 5, 7, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 2, 0, 1, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, -1, 2, 2, 2, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 3, 0, 2, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, 4, 3, 4, 0, 4], ShapeDifficulty.HARD),
  createShape([0, 2, 2, 0, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 0, 2, 0], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 0, 2, 0], ShapeDifficulty.EASY),
  createShape([-1, -1, 2, 1, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, 4, 6, 6, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 2, 1, 2, 0], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 1, 1, 1], ShapeDifficulty.EASY),
  createShape([-1, 0, 0, 2, 3, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 2, 1, 1], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 5, 6, 5], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 2, 1, 1], ShapeDifficulty.HARD),
  createShape([5, -1, 0, 0, 3, 5], ShapeDifficulty.HARD),
  createShape([3, 0, 0, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 0, 0, 3, 3], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 2, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 2, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([3, 0, 0, 0, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 2, 0, 2, 0, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, 7, 6, 4, 5, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 3, 4, 3, 4], ShapeDifficulty.MEDIUM),
  createShape([0, 2, -1, -1, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 7, 9, 9, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 0, 0, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 1, 3, 1, 3, 1], ShapeDifficulty.MEDIUM),
  createShape([0, 2, 0, 1, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([2, 2, 0, 1, 0, 0], ShapeDifficulty.MEDIUM, BAR_CHORD | CLASSIC),
  createShape([-1, -1, 5, 3, 4, 0], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 3, 3, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 2, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([3, -1, 2, 0, 0, 0], ShapeDifficulty.HARD),
  createShape([-1, 2, 5, -1, -1, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 0, 0, 3, 0], ShapeDifficulty.EASY),
  createShape([0, 2, 2, 0, 3, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 2, 2, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([-1, -1, 0, 12, 12, 12], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 9, 8, 7], ShapeDifficulty.EASY),
  createShape([0, -1, 0, 0, 0, 0], ShapeDifficulty.HARD),
  createShape([-1, 10, 12, 12, 12, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 0, 0, 0, 3], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([3, -1, 0, 2, 0, 0], ShapeDifficulty.HARD),
  createShape([0, 2, 0, 0, 0, 2], ShapeDifficulty.EASY),
  createShape([0, 2, 0, 0, 3, 2], ShapeDifficulty.MEDIUM),
  createShape([2, 2, 0, 0, 0, 0], ShapeDifficulty.EASY),
  createShape([0, 2, 1, 1, 0, 2], ShapeDifficulty.MEDIUM),
  createShape([4, -1, 4, 4, 4, 0], ShapeDifficulty.HARD),
  createShape([0, 6, 4, 0, 0, 0], ShapeDifficulty.EASY),
  createShape([-1, 0, 3, 2, 1, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, 2, 2, 1, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 2, 1, 0, 0], ShapeDifficulty.EASY),
  createShape([-1, 7, 9, -1, -1, 0], ShapeDifficulty.HARD),
  createShape([-1, 2, 2, 0, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 2, 3, 2, 1, 0], ShapeDifficulty.MEDIUM),
  createShape([1, 3, 3, 2, 0, 0], ShapeDifficulty.MEDIUM),
  createShape([0, 0, 3, 0, 1, 3], ShapeDifficulty.MEDIUM),
  createShape([3, 2, 0, 0, 0, 3], ShapeDifficulty.EASY),
  createShape([3, 2, 0, 0, 3, 3], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 0, 0, 3], ShapeDifficulty.HARD),
  createShape([-1, -1, 0, 4, 3, 3], ShapeDifficulty.EASY),
  createShape([-1, -1, 0, 7, 8, 7], ShapeDifficulty.MEDIUM),
  createShape([3, -1, 0, 0, 3, 3], ShapeDifficulty.HARD),
  createShape([-1, 3, 0, 0, 0, 1], ShapeDifficulty.MEDIUM),
  createShape([-1, 0, 0, 0, 0, 1], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, 0, 1, 0, 1, 1], ShapeDifficulty.HARD),
  createShape([-1, 0, 4, 3, 2, 0], ShapeDifficulty.MEDIUM, BAR_CHORD),
  createShape([-1, 2, 2, 2, 0, 0], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([-1, -1, 0, 3, 3, 3], ShapeDifficulty.EASY, BAR_CHORD),
  createShape([0, 0, 3, 3, 3, 3], ShapeDifficulty.EASY, BAR_CHORD | CLASSIC),
  createShape([5, 0, 0, 0, 3, 0], ShapeDifficulty.EASY),
];

export const compareWithKnownShapes = (
  shape: Shape
): {
  min: number;
  extras: number;
} => {
  const min: {
    difficulty: number;
    shape: Shape | null;
  } = {
    difficulty: 50,
    shape: null,
  };
  SHAPES.forEach((s) => {
    const info = compareShape(s, shape);
    if (info.difficulty < min.difficulty) {
      min.difficulty = info.difficulty;
      min.shape = s;
    }
  });
  return {
    min: min.difficulty,
    extras: min?.shape?.extra ?? 0,
  };
};
